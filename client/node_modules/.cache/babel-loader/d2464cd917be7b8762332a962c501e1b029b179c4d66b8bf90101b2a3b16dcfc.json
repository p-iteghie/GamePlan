{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\nvar MAX_OCTET = 0x80,\n  CLASS_UNIVERSAL = 0,\n  PRIMITIVE_BIT = 0x20,\n  TAG_SEQ = 0x10,\n  TAG_INT = 0x02,\n  ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | CLASS_UNIVERSAL << 6,\n  ENCODED_TAG_INT = TAG_INT | CLASS_UNIVERSAL << 6;\nfunction base64Url(base64) {\n  return base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction signatureAsBuffer(signature) {\n  if (Buffer.isBuffer(signature)) {\n    return signature;\n  } else if ('string' === typeof signature) {\n    return Buffer.from(signature, 'base64');\n  }\n  throw new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\nfunction derToJose(signature, alg) {\n  signature = signatureAsBuffer(signature);\n  var paramBytes = getParamBytesForAlg(alg);\n\n  // the DER encoded param should at most be the param size, plus a padding\n  // zero, since due to being a signed integer\n  var maxEncodedParamLength = paramBytes + 1;\n  var inputLength = signature.length;\n  var offset = 0;\n  if (signature[offset++] !== ENCODED_TAG_SEQ) {\n    throw new Error('Could not find expected \"seq\"');\n  }\n  var seqLength = signature[offset++];\n  if (seqLength === (MAX_OCTET | 1)) {\n    seqLength = signature[offset++];\n  }\n  if (inputLength - offset < seqLength) {\n    throw new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n  }\n  if (signature[offset++] !== ENCODED_TAG_INT) {\n    throw new Error('Could not find expected \"int\" for \"r\"');\n  }\n  var rLength = signature[offset++];\n  if (inputLength - offset - 2 < rLength) {\n    throw new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n  }\n  if (maxEncodedParamLength < rLength) {\n    throw new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n  }\n  var rOffset = offset;\n  offset += rLength;\n  if (signature[offset++] !== ENCODED_TAG_INT) {\n    throw new Error('Could not find expected \"int\" for \"s\"');\n  }\n  var sLength = signature[offset++];\n  if (inputLength - offset !== sLength) {\n    throw new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n  }\n  if (maxEncodedParamLength < sLength) {\n    throw new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n  }\n  var sOffset = offset;\n  offset += sLength;\n  if (offset !== inputLength) {\n    throw new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n  }\n  var rPadding = paramBytes - rLength,\n    sPadding = paramBytes - sLength;\n  var dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n  for (offset = 0; offset < rPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n  offset = paramBytes;\n  for (var o = offset; offset < o + sPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n  dst = dst.toString('base64');\n  dst = base64Url(dst);\n  return dst;\n}\nfunction countPadding(buf, start, stop) {\n  var padding = 0;\n  while (start + padding < stop && buf[start + padding] === 0) {\n    ++padding;\n  }\n  var needsSign = buf[start + padding] >= MAX_OCTET;\n  if (needsSign) {\n    --padding;\n  }\n  return padding;\n}\nfunction joseToDer(signature, alg) {\n  signature = signatureAsBuffer(signature);\n  var paramBytes = getParamBytesForAlg(alg);\n  var signatureBytes = signature.length;\n  if (signatureBytes !== paramBytes * 2) {\n    throw new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n  }\n  var rPadding = countPadding(signature, 0, paramBytes);\n  var sPadding = countPadding(signature, paramBytes, signature.length);\n  var rLength = paramBytes - rPadding;\n  var sLength = paramBytes - sPadding;\n  var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n  var shortLength = rsBytes < MAX_OCTET;\n  var dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n  var offset = 0;\n  dst[offset++] = ENCODED_TAG_SEQ;\n  if (shortLength) {\n    // Bit 8 has value \"0\"\n    // bits 7-1 give the length.\n    dst[offset++] = rsBytes;\n  } else {\n    // Bit 8 of first octet has value \"1\"\n    // bits 7-1 give the number of additional length octets.\n    dst[offset++] = MAX_OCTET | 1;\n    // length, base 256\n    dst[offset++] = rsBytes & 0xff;\n  }\n  dst[offset++] = ENCODED_TAG_INT;\n  dst[offset++] = rLength;\n  if (rPadding < 0) {\n    dst[offset++] = 0;\n    offset += signature.copy(dst, offset, 0, paramBytes);\n  } else {\n    offset += signature.copy(dst, offset, rPadding, paramBytes);\n  }\n  dst[offset++] = ENCODED_TAG_INT;\n  dst[offset++] = sLength;\n  if (sPadding < 0) {\n    dst[offset++] = 0;\n    signature.copy(dst, offset, paramBytes);\n  } else {\n    signature.copy(dst, offset, paramBytes + sPadding);\n  }\n  return dst;\n}\nmodule.exports = {\n  derToJose: derToJose,\n  joseToDer: joseToDer\n};","map":{"version":3,"names":["Buffer","require","getParamBytesForAlg","MAX_OCTET","CLASS_UNIVERSAL","PRIMITIVE_BIT","TAG_SEQ","TAG_INT","ENCODED_TAG_SEQ","ENCODED_TAG_INT","base64Url","base64","replace","signatureAsBuffer","signature","isBuffer","from","TypeError","derToJose","alg","paramBytes","maxEncodedParamLength","inputLength","length","offset","Error","seqLength","rLength","rOffset","sLength","sOffset","rPadding","sPadding","dst","allocUnsafe","copy","Math","max","o","toString","countPadding","buf","start","stop","padding","needsSign","joseToDer","signatureBytes","rsBytes","shortLength","module","exports"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js"],"sourcesContent":["'use strict';\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n\r\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\r\n\r\nvar MAX_OCTET = 0x80,\r\n\tCLASS_UNIVERSAL = 0,\r\n\tPRIMITIVE_BIT = 0x20,\r\n\tTAG_SEQ = 0x10,\r\n\tTAG_INT = 0x02,\r\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\r\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\r\n\r\nfunction base64Url(base64) {\r\n\treturn base64\r\n\t\t.replace(/=/g, '')\r\n\t\t.replace(/\\+/g, '-')\r\n\t\t.replace(/\\//g, '_');\r\n}\r\n\r\nfunction signatureAsBuffer(signature) {\r\n\tif (Buffer.isBuffer(signature)) {\r\n\t\treturn signature;\r\n\t} else if ('string' === typeof signature) {\r\n\t\treturn Buffer.from(signature, 'base64');\r\n\t}\r\n\r\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\r\n}\r\n\r\nfunction derToJose(signature, alg) {\r\n\tsignature = signatureAsBuffer(signature);\r\n\tvar paramBytes = getParamBytesForAlg(alg);\r\n\r\n\t// the DER encoded param should at most be the param size, plus a padding\r\n\t// zero, since due to being a signed integer\r\n\tvar maxEncodedParamLength = paramBytes + 1;\r\n\r\n\tvar inputLength = signature.length;\r\n\r\n\tvar offset = 0;\r\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\r\n\t\tthrow new Error('Could not find expected \"seq\"');\r\n\t}\r\n\r\n\tvar seqLength = signature[offset++];\r\n\tif (seqLength === (MAX_OCTET | 1)) {\r\n\t\tseqLength = signature[offset++];\r\n\t}\r\n\r\n\tif (inputLength - offset < seqLength) {\r\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\r\n\t}\r\n\r\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\r\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\r\n\t}\r\n\r\n\tvar rLength = signature[offset++];\r\n\r\n\tif (inputLength - offset - 2 < rLength) {\r\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\r\n\t}\r\n\r\n\tif (maxEncodedParamLength < rLength) {\r\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\r\n\t}\r\n\r\n\tvar rOffset = offset;\r\n\toffset += rLength;\r\n\r\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\r\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\r\n\t}\r\n\r\n\tvar sLength = signature[offset++];\r\n\r\n\tif (inputLength - offset !== sLength) {\r\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\r\n\t}\r\n\r\n\tif (maxEncodedParamLength < sLength) {\r\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\r\n\t}\r\n\r\n\tvar sOffset = offset;\r\n\toffset += sLength;\r\n\r\n\tif (offset !== inputLength) {\r\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\r\n\t}\r\n\r\n\tvar rPadding = paramBytes - rLength,\r\n\t\tsPadding = paramBytes - sLength;\r\n\r\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\r\n\r\n\tfor (offset = 0; offset < rPadding; ++offset) {\r\n\t\tdst[offset] = 0;\r\n\t}\r\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\r\n\r\n\toffset = paramBytes;\r\n\r\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\r\n\t\tdst[offset] = 0;\r\n\t}\r\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\r\n\r\n\tdst = dst.toString('base64');\r\n\tdst = base64Url(dst);\r\n\r\n\treturn dst;\r\n}\r\n\r\nfunction countPadding(buf, start, stop) {\r\n\tvar padding = 0;\r\n\twhile (start + padding < stop && buf[start + padding] === 0) {\r\n\t\t++padding;\r\n\t}\r\n\r\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\r\n\tif (needsSign) {\r\n\t\t--padding;\r\n\t}\r\n\r\n\treturn padding;\r\n}\r\n\r\nfunction joseToDer(signature, alg) {\r\n\tsignature = signatureAsBuffer(signature);\r\n\tvar paramBytes = getParamBytesForAlg(alg);\r\n\r\n\tvar signatureBytes = signature.length;\r\n\tif (signatureBytes !== paramBytes * 2) {\r\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\r\n\t}\r\n\r\n\tvar rPadding = countPadding(signature, 0, paramBytes);\r\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\r\n\tvar rLength = paramBytes - rPadding;\r\n\tvar sLength = paramBytes - sPadding;\r\n\r\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\r\n\r\n\tvar shortLength = rsBytes < MAX_OCTET;\r\n\r\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\r\n\r\n\tvar offset = 0;\r\n\tdst[offset++] = ENCODED_TAG_SEQ;\r\n\tif (shortLength) {\r\n\t\t// Bit 8 has value \"0\"\r\n\t\t// bits 7-1 give the length.\r\n\t\tdst[offset++] = rsBytes;\r\n\t} else {\r\n\t\t// Bit 8 of first octet has value \"1\"\r\n\t\t// bits 7-1 give the number of additional length octets.\r\n\t\tdst[offset++] = MAX_OCTET\t| 1;\r\n\t\t// length, base 256\r\n\t\tdst[offset++] = rsBytes & 0xff;\r\n\t}\r\n\tdst[offset++] = ENCODED_TAG_INT;\r\n\tdst[offset++] = rLength;\r\n\tif (rPadding < 0) {\r\n\t\tdst[offset++] = 0;\r\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\r\n\t} else {\r\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\r\n\t}\r\n\tdst[offset++] = ENCODED_TAG_INT;\r\n\tdst[offset++] = sLength;\r\n\tif (sPadding < 0) {\r\n\t\tdst[offset++] = 0;\r\n\t\tsignature.copy(dst, offset, paramBytes);\r\n\t} else {\r\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\r\n\t}\r\n\r\n\treturn dst;\r\n}\r\n\r\nmodule.exports = {\r\n\tderToJose: derToJose,\r\n\tjoseToDer: joseToDer\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}