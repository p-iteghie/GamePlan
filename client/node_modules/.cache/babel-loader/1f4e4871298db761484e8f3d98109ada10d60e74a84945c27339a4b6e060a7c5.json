{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piteg\\\\source\\\\repos\\\\p-iteghie\\\\GamePlan\\\\client\\\\src\\\\AddFriend.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendRequests() {\n  _s();\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [error, setError] = useState(null);\n  const userId = \"userId_from_logged_in_user\"; // Replace with logic to get the logged-in user ID.\n\n  useEffect(() => {\n    const fetchFriendRequests = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/get-friend-requests/${userId}`);\n        const data = await response.json();\n        setFriendRequests(data);\n      } catch (error) {\n        setError(\"Failed to load friend requests.\");\n      }\n    };\n    fetchFriendRequests();\n  }, [userId]);\n  const handleAccept = async requesterId => {\n    try {\n      const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: userId,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error accepting friend request.\");\n    }\n  };\n  const handleDeny = async requesterId => {\n    try {\n      const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: userId,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error denying friend request.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: friendRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No friend requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : friendRequests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [request.username, \" wants to be your friend!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAccept(request._id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeny(request._id),\n          children: \"Deny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendRequests, \"5QmSDQDdZyuvbmmTyrDR52AVCaM=\");\n_c = FriendRequests;\nexport default FriendRequests;\nvar _c;\n$RefreshReg$(_c, \"FriendRequests\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FriendRequests","_s","friendRequests","setFriendRequests","error","setError","userId","useEffect","fetchFriendRequests","response","fetch","data","json","handleAccept","requesterId","method","headers","body","JSON","stringify","ok","filter","req","_id","handleDeny","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","request","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/AddFriend.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction FriendRequests() {\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const userId = \"userId_from_logged_in_user\"; // Replace with logic to get the logged-in user ID.\r\n\r\n    useEffect(() => {\r\n        const fetchFriendRequests = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/get-friend-requests/${userId}`);\r\n                const data = await response.json();\r\n                setFriendRequests(data);\r\n            } catch (error) {\r\n                setError(\"Failed to load friend requests.\");\r\n            }\r\n        };\r\n\r\n        fetchFriendRequests();\r\n    }, [userId]);\r\n\r\n    const handleAccept = async (requesterId) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error accepting friend request.\");\r\n        }\r\n    };\r\n\r\n    const handleDeny = async (requesterId) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error denying friend request.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Friend Requests</h1>\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n            <div>\r\n                {friendRequests.length === 0 ? (\r\n                    <p>No friend requests.</p>\r\n                ) : (\r\n                    friendRequests.map((request) => (\r\n                        <div key={request._id}>\r\n                            <p>{request.username} wants to be your friend!</p>\r\n                            <button onClick={() => handleAccept(request._id)}>Accept</button>\r\n                            <button onClick={() => handleDeny(request._id)}>Deny</button>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendRequests;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}