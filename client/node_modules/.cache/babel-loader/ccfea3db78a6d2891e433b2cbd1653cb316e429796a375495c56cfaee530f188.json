{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nconst isTokenExpired = token => {\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Convert to seconds\n    return decoded.exp < currentTime;\n  } catch (error) {\n    console.error(\"Invalid token:\", error);\n    return true; // Treat invalid tokens as expired\n  }\n};\nfunction TokenManager() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkToken = () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        const isExpired = isTokenExpired(token);\n        if (isExpired) {\n          console.log(\"Token expired. Logging out.\");\n          localStorage.removeItem(\"token\"); // Remove expired token\n          navigate(\"/login\"); // Redirect to login page\n        }\n      }\n    };\n\n    // Check token immediately\n    checkToken();\n\n    // Periodically check token every minute\n    const interval = setInterval(checkToken, 60000); // 60 seconds\n\n    // Cleanup on component unmount\n    return () => clearInterval(interval);\n  }, [navigate]);\n  return null; // This component doesn't render anything\n}\n_s(TokenManager, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = TokenManager;\nexport default TokenManager;\nvar _c;\n$RefreshReg$(_c, \"TokenManager\");","map":{"version":3,"names":["React","useEffect","useNavigate","jwtDecode","isTokenExpired","token","decoded","currentTime","Date","now","exp","error","console","TokenManager","_s","navigate","checkToken","localStorage","getItem","isExpired","log","removeItem","interval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/TokenManager.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst isTokenExpired = (token) => {\r\n    try {\r\n        const decoded = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000; // Convert to seconds\r\n        return decoded.exp < currentTime;\r\n    } catch (error) {\r\n        console.error(\"Invalid token:\", error);\r\n        return true; // Treat invalid tokens as expired\r\n    }\r\n};\r\n\r\n\r\nfunction TokenManager() {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkToken = () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (token) {\r\n                const isExpired = isTokenExpired(token);\r\n                if (isExpired) {\r\n                    console.log(\"Token expired. Logging out.\");\r\n                    localStorage.removeItem(\"token\"); // Remove expired token\r\n                    navigate(\"/login\"); // Redirect to login page\r\n                }\r\n            }\r\n        };\r\n\r\n        // Check token immediately\r\n        checkToken();\r\n\r\n        // Periodically check token every minute\r\n        const interval = setInterval(checkToken, 60000); // 60 seconds\r\n\r\n        // Cleanup on component unmount\r\n        return () => clearInterval(interval);\r\n    }, [navigate]);\r\n\r\n    return null; // This component doesn't render anything\r\n}\r\n\r\nexport default TokenManager;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,IAAI;IACA,MAAMC,OAAO,GAAGH,SAAS,CAACE,KAAK,CAAC;IAChC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW;EACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC;AAGD,SAASE,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMX,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIb,KAAK,EAAE;QACP,MAAMc,SAAS,GAAGf,cAAc,CAACC,KAAK,CAAC;QACvC,IAAIc,SAAS,EAAE;UACXP,OAAO,CAACQ,GAAG,CAAC,6BAA6B,CAAC;UAC1CH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;UAClCN,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxB;MACJ;IACJ,CAAC;;IAED;IACAC,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMM,QAAQ,GAAGC,WAAW,CAACP,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEjD;IACA,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI,CAAC,CAAC;AACjB;AAACD,EAAA,CA3BQD,YAAY;EAAA,QACAX,WAAW;AAAA;AAAAuB,EAAA,GADvBZ,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}