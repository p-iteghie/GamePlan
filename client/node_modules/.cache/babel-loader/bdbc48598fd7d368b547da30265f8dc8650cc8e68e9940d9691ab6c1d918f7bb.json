{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyss\\\\Documents\\\\CEN3031\\\\GamePlan\\\\client\\\\src\\\\Login.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = require('./loginDB/UserModel.js');\nfunction Login() {\n  _s2();\n  var _s = $RefreshSig$();\n  // Define two pieces of state: one for username and one for password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page refresh\n\n    // Make a POST request with both username and password\n    const responseMessage = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }) // Send both username and password\n    });\n    const data = await responseMessage.json();\n    setResponseMessage(data.message); // Assuming the server returns a message  \n  };\n  const GetUserButton = () => {\n    _s();\n    const [userData, setUserData] = useState(null);\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/users', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setUserData(data); // Store the fetched data in state\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value) // Update username state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value) // Update password state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchUserData,\n        children: \"Get User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(userData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  };\n  _s(GetUserButton, \"hXjgW5Dna7AfY8GclqpRKYNaYWw=\");\n}\n_s2(Login, \"sffhP9Oa0nw3VO5EKrT/goZm4CE=\");\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","User","require","Login","_s2","_s","$RefreshSig$","username","setUsername","password","setPassword","responseMessage","setResponseMessage","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","data","json","message","GetUserButton","userData","setUserData","fetchUserData","response","ok","Error","error","console","style","padding","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lyss/Documents/CEN3031/GamePlan/client/src/Login.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst User = require('./loginDB/UserModel.js');\r\n\r\nfunction Login()\r\n{\r\n    // Define two pieces of state: one for username and one for password\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh\r\n\r\n    // Make a POST request with both username and password\r\n    const responseMessage = await fetch('http://localhost:5000/login', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ username, password }),  // Send both username and password\r\n    });\r\n\r\n    const data = await responseMessage.json();\r\n    setResponseMessage(data.message);  // Assuming the server returns a message  \r\n  };\r\n\r\n  const GetUserButton = () => {\r\n    const [userData, setUserData] = useState(null);\r\n  \r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/users', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        setUserData(data); // Store the fetched data in state\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Username input */}\r\n        <div>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}  // Update username state\r\n          />\r\n        </div>\r\n\r\n        {/* Password input */}\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}  // Update password state\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <button onClick={fetchUserData}>Get User Data</button>\r\n      {userData && (\r\n        <div>\r\n          <h3>User Data:</h3>\r\n          <pre>{JSON.stringify(userData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}