{"ast":null,"code":"'use strict';\n\nvar stringWidth = require('string-width');\nexports.center = alignCenter;\nexports.left = alignLeft;\nexports.right = alignRight;\n\n// lodash's way of generating pad characters.\n\nfunction createPadding(width) {\n  var result = '';\n  var string = ' ';\n  var n = width;\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = Math.floor(n / 2);\n    string += string;\n  } while (n);\n  return result;\n}\nfunction alignLeft(str, width) {\n  var trimmed = str.trimRight();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padding = '';\n  var strWidth = stringWidth(trimmed);\n  if (strWidth < width) {\n    padding = createPadding(width - strWidth);\n  }\n  return trimmed + padding;\n}\nfunction alignRight(str, width) {\n  var trimmed = str.trimLeft();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padding = '';\n  var strWidth = stringWidth(trimmed);\n  if (strWidth < width) {\n    padding = createPadding(width - strWidth);\n  }\n  return padding + trimmed;\n}\nfunction alignCenter(str, width) {\n  var trimmed = str.trim();\n  if (trimmed.length === 0 && str.length >= width) return str;\n  var padLeft = '';\n  var padRight = '';\n  var strWidth = stringWidth(trimmed);\n  if (strWidth < width) {\n    var padLeftBy = parseInt((width - strWidth) / 2, 10);\n    padLeft = createPadding(padLeftBy);\n    padRight = createPadding(width - (strWidth + padLeftBy));\n  }\n  return padLeft + trimmed + padRight;\n}","map":{"version":3,"names":["stringWidth","require","exports","center","alignCenter","left","alignLeft","right","alignRight","createPadding","width","result","string","n","Math","floor","str","trimmed","trimRight","length","padding","strWidth","trimLeft","trim","padLeft","padRight","padLeftBy","parseInt"],"sources":["C:/Users/Lyss/Documents/CEN3031/GamePlan/node_modules/wide-align/align.js"],"sourcesContent":["'use strict'\r\nvar stringWidth = require('string-width')\r\n\r\nexports.center = alignCenter\r\nexports.left = alignLeft\r\nexports.right = alignRight\r\n\r\n// lodash's way of generating pad characters.\r\n\r\nfunction createPadding (width) {\r\n  var result = ''\r\n  var string = ' '\r\n  var n = width\r\n  do {\r\n    if (n % 2) {\r\n      result += string;\r\n    }\r\n    n = Math.floor(n / 2);\r\n    string += string;\r\n  } while (n);\r\n\r\n  return result;\r\n}\r\n\r\nfunction alignLeft (str, width) {\r\n  var trimmed = str.trimRight()\r\n  if (trimmed.length === 0 && str.length >= width) return str\r\n  var padding = ''\r\n  var strWidth = stringWidth(trimmed)\r\n\r\n  if (strWidth < width) {\r\n    padding = createPadding(width - strWidth)\r\n  }\r\n\r\n  return trimmed + padding\r\n}\r\n\r\nfunction alignRight (str, width) {\r\n  var trimmed = str.trimLeft()\r\n  if (trimmed.length === 0 && str.length >= width) return str\r\n  var padding = ''\r\n  var strWidth = stringWidth(trimmed)\r\n\r\n  if (strWidth < width) {\r\n    padding = createPadding(width - strWidth)\r\n  }\r\n\r\n  return padding + trimmed\r\n}\r\n\r\nfunction alignCenter (str, width) {\r\n  var trimmed = str.trim()\r\n  if (trimmed.length === 0 && str.length >= width) return str\r\n  var padLeft = ''\r\n  var padRight = ''\r\n  var strWidth = stringWidth(trimmed)\r\n\r\n  if (strWidth < width) {\r\n    var padLeftBy = parseInt((width - strWidth) / 2, 10) \r\n    padLeft = createPadding(padLeftBy)\r\n    padRight = createPadding(width - (strWidth + padLeftBy))\r\n  }\r\n\r\n  return padLeft + trimmed + padRight\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEzCC,OAAO,CAACC,MAAM,GAAGC,WAAW;AAC5BF,OAAO,CAACG,IAAI,GAAGC,SAAS;AACxBJ,OAAO,CAACK,KAAK,GAAGC,UAAU;;AAE1B;;AAEA,SAASC,aAAaA,CAAEC,KAAK,EAAE;EAC7B,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,MAAM,GAAG,GAAG;EAChB,IAAIC,CAAC,GAAGH,KAAK;EACb,GAAG;IACD,IAAIG,CAAC,GAAG,CAAC,EAAE;MACTF,MAAM,IAAIC,MAAM;IAClB;IACAC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC;IACrBD,MAAM,IAAIA,MAAM;EAClB,CAAC,QAAQC,CAAC;EAEV,OAAOF,MAAM;AACf;AAEA,SAASL,SAASA,CAAEU,GAAG,EAAEN,KAAK,EAAE;EAC9B,IAAIO,OAAO,GAAGD,GAAG,CAACE,SAAS,CAAC,CAAC;EAC7B,IAAID,OAAO,CAACE,MAAM,KAAK,CAAC,IAAIH,GAAG,CAACG,MAAM,IAAIT,KAAK,EAAE,OAAOM,GAAG;EAC3D,IAAII,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAGrB,WAAW,CAACiB,OAAO,CAAC;EAEnC,IAAII,QAAQ,GAAGX,KAAK,EAAE;IACpBU,OAAO,GAAGX,aAAa,CAACC,KAAK,GAAGW,QAAQ,CAAC;EAC3C;EAEA,OAAOJ,OAAO,GAAGG,OAAO;AAC1B;AAEA,SAASZ,UAAUA,CAAEQ,GAAG,EAAEN,KAAK,EAAE;EAC/B,IAAIO,OAAO,GAAGD,GAAG,CAACM,QAAQ,CAAC,CAAC;EAC5B,IAAIL,OAAO,CAACE,MAAM,KAAK,CAAC,IAAIH,GAAG,CAACG,MAAM,IAAIT,KAAK,EAAE,OAAOM,GAAG;EAC3D,IAAII,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAGrB,WAAW,CAACiB,OAAO,CAAC;EAEnC,IAAII,QAAQ,GAAGX,KAAK,EAAE;IACpBU,OAAO,GAAGX,aAAa,CAACC,KAAK,GAAGW,QAAQ,CAAC;EAC3C;EAEA,OAAOD,OAAO,GAAGH,OAAO;AAC1B;AAEA,SAASb,WAAWA,CAAEY,GAAG,EAAEN,KAAK,EAAE;EAChC,IAAIO,OAAO,GAAGD,GAAG,CAACO,IAAI,CAAC,CAAC;EACxB,IAAIN,OAAO,CAACE,MAAM,KAAK,CAAC,IAAIH,GAAG,CAACG,MAAM,IAAIT,KAAK,EAAE,OAAOM,GAAG;EAC3D,IAAIQ,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIJ,QAAQ,GAAGrB,WAAW,CAACiB,OAAO,CAAC;EAEnC,IAAII,QAAQ,GAAGX,KAAK,EAAE;IACpB,IAAIgB,SAAS,GAAGC,QAAQ,CAAC,CAACjB,KAAK,GAAGW,QAAQ,IAAI,CAAC,EAAE,EAAE,CAAC;IACpDG,OAAO,GAAGf,aAAa,CAACiB,SAAS,CAAC;IAClCD,QAAQ,GAAGhB,aAAa,CAACC,KAAK,IAAIW,QAAQ,GAAGK,SAAS,CAAC,CAAC;EAC1D;EAEA,OAAOF,OAAO,GAAGP,OAAO,GAAGQ,QAAQ;AACrC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}