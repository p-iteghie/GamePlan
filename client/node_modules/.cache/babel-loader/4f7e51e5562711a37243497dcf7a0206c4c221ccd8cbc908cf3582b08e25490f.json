{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piteg\\\\source\\\\repos\\\\p-iteghie\\\\GamePlan\\\\client\\\\src\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from 'jwt-decode';\nimport \"./Styles/Calendar.css\"; // Create a simple CSS file for styling.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [loggedInUserId, setLoggedInUserId] = useState('');\n  const [loggedInUsername, setLoggedInUsername] = useState('');\n\n  // Fetch available users when component loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded);\n        // Assuming the token has a username, store the username in the state\n        setLoggedInUserId(decoded._id); // or decoded.userId, depending on what you store in the token\n        setLoggedInUsername(decoded.username);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    // Fetch events from the server when the component mounts.\n    const fetchEvents = async () => {\n      const token = localStorage.getItem('token');\n      if (loggedInUsername) {\n        try {\n          const response = await fetch('http://localhost:5000/getevents', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          }); // Ensure your server endpoint is correct.\n          const data = await response.json();\n          setEvents(data);\n        } catch (error) {\n          console.error(\"Error fetching events:\", error);\n        }\n      }\n    };\n    fetchEvents();\n  }, [loggedInUsername]);\n  useEffect(() => {\n    // Filter events based on the current month and year.\n    const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n    const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n    const eventsInMonth = events.filter(event => {\n      const eventStartTime = new Date(event.startTime); // Use startTime\n      console.log(\"Event:\", event, \"Parsed startTime:\", eventStartTime);\n      return eventStartTime >= startOfMonth && eventStartTime <= endOfMonth && !isNaN(eventStartTime) // Ensure startTime is valid\n      ;\n    });\n    setFilteredEvents(eventsInMonth);\n  }, [currentDate, events]);\n  const changeMonth = direction => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n  };\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GamePlan Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Event Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(events, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filtered Event Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(filteredEvents, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(-1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentDate.toLocaleString(\"default\", {\n            month: \"long\"\n          }), \" \", currentDate.getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeMonth(1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-grid\",\n        children: Array.from({\n          length: daysInMonth\n        }, (_, i) => {\n          const day = i + 1;\n          const dayEvents = filteredEvents.filter(event => {\n            const eventDate = new Date(event.date);\n            return eventDate.getDate() === day;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-day\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"events\",\n              children: dayEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event\",\n                children: event.title\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"nUwShAguMNo+miMx1gO+ryIhotc=\");\n_c = Calendar;\n;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","events","setEvents","filteredEvents","setFilteredEvents","loggedInUserId","setLoggedInUserId","loggedInUsername","setLoggedInUsername","token","localStorage","getItem","decoded","console","log","_id","username","error","fetchEvents","response","fetch","method","headers","data","json","startOfMonth","getFullYear","getMonth","endOfMonth","eventsInMonth","filter","event","eventStartTime","startTime","isNaN","changeMonth","direction","daysInMonth","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onClick","toLocaleString","month","Array","from","length","_","i","day","dayEvents","eventDate","date","map","index","title","_c","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport \"./Styles/Calendar.css\"; // Create a simple CSS file for styling.\r\n\r\nfunction Calendar() {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [events, setEvents] = useState([]);\r\n    const [filteredEvents, setFilteredEvents] = useState([]);\r\n    const [loggedInUserId, setLoggedInUserId] = useState('');\r\n    const [loggedInUsername, setLoggedInUsername] = useState('');\r\n\r\n    // Fetch available users when component loads\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                console.log('Decoded token:', decoded);\r\n                // Assuming the token has a username, store the username in the state\r\n                setLoggedInUserId(decoded._id);  // or decoded.userId, depending on what you store in the token\r\n                setLoggedInUsername(decoded.username);\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch events from the server when the component mounts.\r\n      const fetchEvents = async () => {\r\n          const token = localStorage.getItem('token');\r\n          if (loggedInUsername) {\r\n              try {\r\n                  const response = await fetch('http://localhost:5000/getevents', {\r\n                      method: 'GET',\r\n                      headers: {\r\n                          'Content-Type': 'application/json',\r\n                          'Authorization': `Bearer ${token}`,\r\n                      },\r\n                  }); // Ensure your server endpoint is correct.\r\n                  const data = await response.json();\r\n                  setEvents(data);\r\n              } catch (error) {\r\n                  console.error(\"Error fetching events:\", error);\r\n              }\r\n          }\r\n      \r\n    };\r\n\r\n    fetchEvents();\r\n  }, [loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    // Filter events based on the current month and year.\r\n    const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n    const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n\r\n    const eventsInMonth = events.filter(event => {\r\n        const eventStartTime = new Date(event.startTime); // Use startTime\r\n        console.log(\"Event:\", event, \"Parsed startTime:\", eventStartTime);\r\n        return (\r\n            eventStartTime >= startOfMonth &&\r\n            eventStartTime <= endOfMonth &&\r\n            !isNaN(eventStartTime) // Ensure startTime is valid\r\n        );\r\n    });\r\n\r\n    setFilteredEvents(eventsInMonth);\r\n  }, [currentDate, events]);\r\n\r\n  const changeMonth = (direction) => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\r\n  };\r\n\r\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\r\n\r\n  return (\r\n    <div className=\"Calendar\">\r\n          <h1>GamePlan Calendar</h1>\r\n          <div>\r\n              <h3>Event Data:</h3>\r\n              <pre>{JSON.stringify(events, null, 2)}</pre>\r\n          </div>\r\n          <div>\r\n              <h3>Filtered Event Data:</h3>\r\n              <pre>{JSON.stringify(filteredEvents, null, 2)}</pre>\r\n          </div>\r\n      <div className=\"calendar-container\">\r\n        <header>\r\n          <button onClick={() => changeMonth(-1)}>Previous</button>\r\n          <h2>\r\n            {currentDate.toLocaleString(\"default\", { month: \"long\" })} {currentDate.getFullYear()}\r\n          </h2>\r\n          <button onClick={() => changeMonth(1)}>Next</button>\r\n        </header>\r\n        <div className=\"calendar-grid\">\r\n          {Array.from({ length: daysInMonth }, (_, i) => {\r\n            const day = i + 1;\r\n            const dayEvents = filteredEvents.filter(event => {\r\n              const eventDate = new Date(event.date);\r\n              return eventDate.getDate() === day;\r\n            });\r\n\r\n            return (\r\n              <div className=\"calendar-day\" key={day}>\r\n                <div className=\"date\">{day}</div>\r\n                <div className=\"events\">\r\n                  {dayEvents.map((event, index) => (\r\n                    <div className=\"event\" key={index}>\r\n                      {event.title}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}