{"ast":null,"code":"'use strict';\n\nmodule.exports = exports = configure;\nexports.usage = 'Attempts to configure node-gyp or nw-gyp build';\nconst napi = require('./util/napi.js');\nconst compile = require('./util/compile.js');\nconst handle_gyp_opts = require('./util/handle_gyp_opts.js');\nfunction configure(gyp, argv, callback) {\n  handle_gyp_opts(gyp, argv, (err, result) => {\n    let final_args = result.gyp.concat(result.pre);\n    // pull select node-gyp configure options out of the npm environ\n    const known_gyp_args = ['dist-url', 'python', 'nodedir', 'msvs_version'];\n    known_gyp_args.forEach(key => {\n      const val = gyp.opts[key] || gyp.opts[key.replace('-', '_')];\n      if (val) {\n        final_args.push('--' + key + '=' + val);\n      }\n    });\n    // --ensure=false tell node-gyp to re-install node development headers\n    // but it is only respected by node-gyp install, so we have to call install\n    // as a separate step if the user passes it\n    if (gyp.opts.ensure === false) {\n      const install_args = final_args.concat(['install', '--ensure=false']);\n      compile.run_gyp(install_args, result.opts, err2 => {\n        if (err2) return callback(err2);\n        if (result.unparsed.length > 0) {\n          final_args = final_args.concat(['--']).concat(result.unparsed);\n        }\n        compile.run_gyp(['configure'].concat(final_args), result.opts, err3 => {\n          return callback(err3);\n        });\n      });\n    } else {\n      if (result.unparsed.length > 0) {\n        final_args = final_args.concat(['--']).concat(result.unparsed);\n      }\n      compile.run_gyp(['configure'].concat(final_args), result.opts, err4 => {\n        if (!err4 && result.opts.napi_build_version) {\n          napi.swap_build_dir_out(result.opts.napi_build_version);\n        }\n        return callback(err4);\n      });\n    }\n  });\n}","map":{"version":3,"names":["module","exports","configure","usage","napi","require","compile","handle_gyp_opts","gyp","argv","callback","err","result","final_args","concat","pre","known_gyp_args","forEach","key","val","opts","replace","push","ensure","install_args","run_gyp","err2","unparsed","length","err3","err4","napi_build_version","swap_build_dir_out"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/node_modules/@mapbox/node-pre-gyp/lib/configure.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = exports = configure;\r\n\r\nexports.usage = 'Attempts to configure node-gyp or nw-gyp build';\r\n\r\nconst napi = require('./util/napi.js');\r\nconst compile = require('./util/compile.js');\r\nconst handle_gyp_opts = require('./util/handle_gyp_opts.js');\r\n\r\nfunction configure(gyp, argv, callback) {\r\n  handle_gyp_opts(gyp, argv, (err, result) => {\r\n    let final_args = result.gyp.concat(result.pre);\r\n    // pull select node-gyp configure options out of the npm environ\r\n    const known_gyp_args = ['dist-url', 'python', 'nodedir', 'msvs_version'];\r\n    known_gyp_args.forEach((key) => {\r\n      const val = gyp.opts[key] || gyp.opts[key.replace('-', '_')];\r\n      if (val) {\r\n        final_args.push('--' + key + '=' + val);\r\n      }\r\n    });\r\n    // --ensure=false tell node-gyp to re-install node development headers\r\n    // but it is only respected by node-gyp install, so we have to call install\r\n    // as a separate step if the user passes it\r\n    if (gyp.opts.ensure === false) {\r\n      const install_args = final_args.concat(['install', '--ensure=false']);\r\n      compile.run_gyp(install_args, result.opts, (err2) => {\r\n        if (err2) return callback(err2);\r\n        if (result.unparsed.length > 0) {\r\n          final_args = final_args.\r\n            concat(['--']).\r\n            concat(result.unparsed);\r\n        }\r\n        compile.run_gyp(['configure'].concat(final_args), result.opts, (err3) => {\r\n          return callback(err3);\r\n        });\r\n      });\r\n    } else {\r\n      if (result.unparsed.length > 0) {\r\n        final_args = final_args.\r\n          concat(['--']).\r\n          concat(result.unparsed);\r\n      }\r\n      compile.run_gyp(['configure'].concat(final_args), result.opts, (err4) => {\r\n        if (!err4 && result.opts.napi_build_version) {\r\n          napi.swap_build_dir_out(result.opts.napi_build_version);\r\n        }\r\n        return callback(err4);\r\n      });\r\n    }\r\n  });\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGC,SAAS;AAEpCD,OAAO,CAACE,KAAK,GAAG,gDAAgD;AAEhE,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAME,eAAe,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAE5D,SAASH,SAASA,CAACM,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACtCH,eAAe,CAACC,GAAG,EAAEC,IAAI,EAAE,CAACE,GAAG,EAAEC,MAAM,KAAK;IAC1C,IAAIC,UAAU,GAAGD,MAAM,CAACJ,GAAG,CAACM,MAAM,CAACF,MAAM,CAACG,GAAG,CAAC;IAC9C;IACA,MAAMC,cAAc,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,CAAC;IACxEA,cAAc,CAACC,OAAO,CAAEC,GAAG,IAAK;MAC9B,MAAMC,GAAG,GAAGX,GAAG,CAACY,IAAI,CAACF,GAAG,CAAC,IAAIV,GAAG,CAACY,IAAI,CAACF,GAAG,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MAC5D,IAAIF,GAAG,EAAE;QACPN,UAAU,CAACS,IAAI,CAAC,IAAI,GAAGJ,GAAG,GAAG,GAAG,GAAGC,GAAG,CAAC;MACzC;IACF,CAAC,CAAC;IACF;IACA;IACA;IACA,IAAIX,GAAG,CAACY,IAAI,CAACG,MAAM,KAAK,KAAK,EAAE;MAC7B,MAAMC,YAAY,GAAGX,UAAU,CAACC,MAAM,CAAC,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;MACrER,OAAO,CAACmB,OAAO,CAACD,YAAY,EAAEZ,MAAM,CAACQ,IAAI,EAAGM,IAAI,IAAK;QACnD,IAAIA,IAAI,EAAE,OAAOhB,QAAQ,CAACgB,IAAI,CAAC;QAC/B,IAAId,MAAM,CAACe,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UAC9Bf,UAAU,GAAGA,UAAU,CACrBC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CACdA,MAAM,CAACF,MAAM,CAACe,QAAQ,CAAC;QAC3B;QACArB,OAAO,CAACmB,OAAO,CAAC,CAAC,WAAW,CAAC,CAACX,MAAM,CAACD,UAAU,CAAC,EAAED,MAAM,CAACQ,IAAI,EAAGS,IAAI,IAAK;UACvE,OAAOnB,QAAQ,CAACmB,IAAI,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIjB,MAAM,CAACe,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QAC9Bf,UAAU,GAAGA,UAAU,CACrBC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CACdA,MAAM,CAACF,MAAM,CAACe,QAAQ,CAAC;MAC3B;MACArB,OAAO,CAACmB,OAAO,CAAC,CAAC,WAAW,CAAC,CAACX,MAAM,CAACD,UAAU,CAAC,EAAED,MAAM,CAACQ,IAAI,EAAGU,IAAI,IAAK;QACvE,IAAI,CAACA,IAAI,IAAIlB,MAAM,CAACQ,IAAI,CAACW,kBAAkB,EAAE;UAC3C3B,IAAI,CAAC4B,kBAAkB,CAACpB,MAAM,CAACQ,IAAI,CAACW,kBAAkB,CAAC;QACzD;QACA,OAAOrB,QAAQ,CAACoB,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}