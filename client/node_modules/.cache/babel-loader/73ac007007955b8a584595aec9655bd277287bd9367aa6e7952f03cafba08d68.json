{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyss\\\\Documents\\\\CEN3031\\\\GamePlan\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // Define two pieces of state: one for username and one for password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page refresh\n\n    // Make a POST request with both username and password\n    const response = await fetch('http://localhost:5000/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }) // Send both username and password\n    });\n    const data = await response.json();\n    setResponseMessage(data.message); // Assuming the server returns a message\n\n    bcrypt.hash(password, 10).then(hashedPassword => {\n      // create a new user instance and collect the data\n      const user = new User({\n        username: username,\n        password: hashedPassword\n      });\n\n      // save the new user\n      user.save()\n      // return success if the new user is added to the database successfully\n      .then(result => {\n        res.status(201).send({\n          message: \"User Created Successfully\",\n          result\n        });\n      })\n      // catch error if the new user wasn't added successfully to the database\n      .catch(error => {\n        res.status(500).send({\n          message: \"Error creating user\",\n          error\n        });\n      });\n    })\n    // catch error if the password hash isn't successful\n    .catch(e => {\n      res.status(500).send({\n        message: \"Password was not hashed successfully\",\n        e\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value) // Update username state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value) // Update password state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"sffhP9Oa0nw3VO5EKrT/goZm4CE=\");\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","responseMessage","setResponseMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","message","bcrypt","hash","then","hashedPassword","user","User","save","result","res","status","send","catch","error","style","padding","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Lyss/Documents/CEN3031/GamePlan/client/src/Login.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Login()\r\n{\r\n    // Define two pieces of state: one for username and one for password\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh\r\n\r\n    // Make a POST request with both username and password\r\n    const response = await fetch('http://localhost:5000/submit', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ username, password }),  // Send both username and password\r\n    });\r\n\r\n    const data = await response.json();\r\n    setResponseMessage(data.message);  // Assuming the server returns a message\r\n\r\n    bcrypt\r\n    .hash(password, 10)\r\n    .then((hashedPassword) => {\r\n      // create a new user instance and collect the data\r\n      const user = new User({\r\n        username: username,\r\n        password: hashedPassword,\r\n      });\r\n\r\n      // save the new user\r\n      user\r\n        .save()\r\n        // return success if the new user is added to the database successfully\r\n        .then((result) => {\r\n          res.status(201).send({\r\n            message: \"User Created Successfully\",\r\n            result,\r\n          });\r\n        })\r\n        // catch error if the new user wasn't added successfully to the database\r\n        .catch((error) => {\r\n          res.status(500).send({\r\n            message: \"Error creating user\",\r\n            error,\r\n          });\r\n        });\r\n    })\r\n    // catch error if the password hash isn't successful\r\n    .catch((e) => {\r\n      res.status(500).send({\r\n        message: \"Password was not hashed successfully\",\r\n        e,\r\n      });\r\n    });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Username input */}\r\n        <div>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}  // Update username state\r\n          />\r\n        </div>\r\n\r\n        {/* Password input */}\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}  // Update password state\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}