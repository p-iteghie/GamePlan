{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piteg\\\\source\\\\repos\\\\p-iteghie\\\\GamePlan\\\\client\\\\src\\\\AddFriend.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendRequests() {\n  _s();\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [error, setError] = useState(null);\n  const [loggedInUserId, setLoggedInUserId] = useState('');\n  const [loggedInUsername, setLoggedInUsername] = useState('');\n\n  // Fetch available users when component loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded);\n        // Assuming the token has a username, store the username in the state\n        setLoggedInUserId(decoded._id); // or decoded.userId, depending on what you store in the token\n        setLoggedInUsername(decoded.username);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const fetchFriendRequests = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/get-friend-requests`);\n        const data = await response.json();\n        setFriendRequests(data);\n      } catch (error) {\n        setError(\"Failed to load friend requests.\");\n      }\n    };\n    fetchFriendRequests();\n  }, [userId]);\n  const handleAccept = async requesterId => {\n    try {\n      const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: loggedInUsername,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error accepting friend request.\");\n    }\n  };\n  const handleDeny = async requesterId => {\n    try {\n      const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: userId,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error denying friend request.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: friendRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No friend requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this) : friendRequests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [request.username, \" wants to be your friend!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAccept(request._id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeny(request._id),\n          children: \"Deny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendRequests, \"Ujl2zchr/f8Lp89kOn2tREmtCwY=\");\n_c = FriendRequests;\nexport default FriendRequests;\nvar _c;\n$RefreshReg$(_c, \"FriendRequests\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","FriendRequests","_s","friendRequests","setFriendRequests","error","setError","loggedInUserId","setLoggedInUserId","loggedInUsername","setLoggedInUsername","token","localStorage","getItem","decoded","console","log","_id","username","fetchFriendRequests","response","fetch","data","json","userId","handleAccept","requesterId","method","headers","body","JSON","stringify","ok","filter","req","handleDeny","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","request","onClick","_c","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/AddFriend.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction FriendRequests() {\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loggedInUserId, setLoggedInUserId] = useState('');\r\n    const [loggedInUsername, setLoggedInUsername] = useState('');\r\n\r\n    // Fetch available users when component loads\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                console.log('Decoded token:', decoded);\r\n                // Assuming the token has a username, store the username in the state\r\n                setLoggedInUserId(decoded._id);  // or decoded.userId, depending on what you store in the token\r\n                setLoggedInUsername(decoded.username);\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchFriendRequests = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/get-friend-requests`);\r\n                const data = await response.json();\r\n                setFriendRequests(data);\r\n            } catch (error) {\r\n                setError(\"Failed to load friend requests.\");\r\n            }\r\n        };\r\n\r\n        fetchFriendRequests();\r\n    }, [userId]);\r\n\r\n    const handleAccept = async (requesterId) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    username: loggedInUsername,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error accepting friend request.\");\r\n        }\r\n    };\r\n\r\n    const handleDeny = async (requesterId) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error denying friend request.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Friend Requests</h1>\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n            <div>\r\n                {friendRequests.length === 0 ? (\r\n                    <p>No friend requests.</p>\r\n                ) : (\r\n                    friendRequests.map((request) => (\r\n                        <div key={request._id}>\r\n                            <p>{request.username} wants to be your friend!</p>\r\n                            <button onClick={() => handleAccept(request._id)}>Accept</button>\r\n                            <button onClick={() => handleDeny(request._id)}>Deny</button>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendRequests;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}