{"ast":null,"code":"'use strict';\n\n// map types from key to human-friendly name\nexports.name = new Map([['0', 'File'],\n// same as File\n['', 'OldFile'], ['1', 'Link'], ['2', 'SymbolicLink'],\n// Devices and FIFOs aren't fully supported\n// they are parsed, but skipped when unpacking\n['3', 'CharacterDevice'], ['4', 'BlockDevice'], ['5', 'Directory'], ['6', 'FIFO'],\n// same as File\n['7', 'ContiguousFile'],\n// pax headers\n['g', 'GlobalExtendedHeader'], ['x', 'ExtendedHeader'],\n// vendor-specific stuff\n// skip\n['A', 'SolarisACL'],\n// like 5, but with data, which should be skipped\n['D', 'GNUDumpDir'],\n// metadata only, skip\n['I', 'Inode'],\n// data = link path of next file\n['K', 'NextFileHasLongLinkpath'],\n// data = path of next file\n['L', 'NextFileHasLongPath'],\n// skip\n['M', 'ContinuationFile'],\n// like L\n['N', 'OldGnuLongPath'],\n// skip\n['S', 'SparseFile'],\n// skip\n['V', 'TapeVolumeHeader'],\n// like x\n['X', 'OldExtendedHeader']]);\n\n// map the other direction\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]));","map":{"version":3,"names":["exports","name","Map","code","Array","from","map","kv"],"sources":["C:/Users/Lyss/Documents/CEN3031/GamePlan/node_modules/tar/lib/types.js"],"sourcesContent":["'use strict'\r\n// map types from key to human-friendly name\r\nexports.name = new Map([\r\n  ['0', 'File'],\r\n  // same as File\r\n  ['', 'OldFile'],\r\n  ['1', 'Link'],\r\n  ['2', 'SymbolicLink'],\r\n  // Devices and FIFOs aren't fully supported\r\n  // they are parsed, but skipped when unpacking\r\n  ['3', 'CharacterDevice'],\r\n  ['4', 'BlockDevice'],\r\n  ['5', 'Directory'],\r\n  ['6', 'FIFO'],\r\n  // same as File\r\n  ['7', 'ContiguousFile'],\r\n  // pax headers\r\n  ['g', 'GlobalExtendedHeader'],\r\n  ['x', 'ExtendedHeader'],\r\n  // vendor-specific stuff\r\n  // skip\r\n  ['A', 'SolarisACL'],\r\n  // like 5, but with data, which should be skipped\r\n  ['D', 'GNUDumpDir'],\r\n  // metadata only, skip\r\n  ['I', 'Inode'],\r\n  // data = link path of next file\r\n  ['K', 'NextFileHasLongLinkpath'],\r\n  // data = path of next file\r\n  ['L', 'NextFileHasLongPath'],\r\n  // skip\r\n  ['M', 'ContinuationFile'],\r\n  // like L\r\n  ['N', 'OldGnuLongPath'],\r\n  // skip\r\n  ['S', 'SparseFile'],\r\n  // skip\r\n  ['V', 'TapeVolumeHeader'],\r\n  // like x\r\n  ['X', 'OldExtendedHeader'],\r\n])\r\n\r\n// map the other direction\r\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]))\r\n"],"mappings":"AAAA,YAAY;;AACZ;AACAA,OAAO,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CACrB,CAAC,GAAG,EAAE,MAAM,CAAC;AACb;AACA,CAAC,EAAE,EAAE,SAAS,CAAC,EACf,CAAC,GAAG,EAAE,MAAM,CAAC,EACb,CAAC,GAAG,EAAE,cAAc,CAAC;AACrB;AACA;AACA,CAAC,GAAG,EAAE,iBAAiB,CAAC,EACxB,CAAC,GAAG,EAAE,aAAa,CAAC,EACpB,CAAC,GAAG,EAAE,WAAW,CAAC,EAClB,CAAC,GAAG,EAAE,MAAM,CAAC;AACb;AACA,CAAC,GAAG,EAAE,gBAAgB,CAAC;AACvB;AACA,CAAC,GAAG,EAAE,sBAAsB,CAAC,EAC7B,CAAC,GAAG,EAAE,gBAAgB,CAAC;AACvB;AACA;AACA,CAAC,GAAG,EAAE,YAAY,CAAC;AACnB;AACA,CAAC,GAAG,EAAE,YAAY,CAAC;AACnB;AACA,CAAC,GAAG,EAAE,OAAO,CAAC;AACd;AACA,CAAC,GAAG,EAAE,yBAAyB,CAAC;AAChC;AACA,CAAC,GAAG,EAAE,qBAAqB,CAAC;AAC5B;AACA,CAAC,GAAG,EAAE,kBAAkB,CAAC;AACzB;AACA,CAAC,GAAG,EAAE,gBAAgB,CAAC;AACvB;AACA,CAAC,GAAG,EAAE,YAAY,CAAC;AACnB;AACA,CAAC,GAAG,EAAE,kBAAkB,CAAC;AACzB;AACA,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAC3B,CAAC;;AAEF;AACAF,OAAO,CAACG,IAAI,GAAG,IAAID,GAAG,CAACE,KAAK,CAACC,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,CAACK,GAAG,CAACC,EAAE,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}