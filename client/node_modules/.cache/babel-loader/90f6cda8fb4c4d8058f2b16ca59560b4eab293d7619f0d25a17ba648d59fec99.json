{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piteg\\\\source\\\\repos\\\\p-iteghie\\\\GamePlan\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = require('./loginDB/UserModel.js');\nfunction Login() {\n  _s();\n  // Define two pieces of state: one for username and one for password\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page refresh\n\n    // Make a POST request with both username and password\n    const responseMessage = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }) // Send both username and password\n    });\n    const data = await responseMessage.json();\n    if (responseMessage.ok) {\n      const token = data.token;\n      console.log('Decoded token:', token); // Log the decoded token\n\n      // Decode the JWT token to extract the username\n      try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded); // Log the decoded token\n\n        if (decoded && decoded.username) {\n          const loggedInUsername = decoded.username;\n          console.log('Logged in username:', loggedInUsername);\n\n          // Store the token and username in localStorage or state\n          localStorage.setItem('token', token);\n          localStorage.setItem('username', loggedInUsername);\n        } else {\n          console.error('Username not found in the decoded token');\n        }\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    } else {\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value) // Update username state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value) // Update password state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"sffhP9Oa0nw3VO5EKrT/goZm4CE=\");\n_c = Login;\n;\nconst GetUserButton = () => {\n  _s2();\n  const [userData, setUserData] = useState(null);\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/users'); // Fetch from your endpoint\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setUserData(await response.json());\n      console.log('Fetched User Data:', userData); // Print to the browser console\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUserData,\n      children: \"Get User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(userData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(GetUserButton, \"hXjgW5Dna7AfY8GclqpRKYNaYWw=\");\n_c2 = GetUserButton;\nexport { Login, GetUserButton };\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"GetUserButton\");","map":{"version":3,"names":["React","useState","jwtDecode","jsxDEV","_jsxDEV","User","require","Login","_s","username","setUsername","password","setPassword","responseMessage","setResponseMessage","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","data","json","ok","token","console","log","decoded","loggedInUsername","localStorage","setItem","error","alert","message","style","padding","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","GetUserButton","_s2","userData","setUserData","fetchUserData","response","Error","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst User = require('./loginDB/UserModel.js');\r\n\r\nfunction Login()\r\n{\r\n    // Define two pieces of state: one for username and one for password\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh\r\n\r\n    // Make a POST request with both username and password\r\n    const responseMessage = await fetch('http://localhost:5000/login', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ username, password }),  // Send both username and password\r\n    });\r\n\r\n      const data = await responseMessage.json();\r\n\r\n      if (responseMessage.ok) {\r\n          const token = data.token;\r\n          console.log('Decoded token:', token);  // Log the decoded token\r\n\r\n\r\n          // Decode the JWT token to extract the username\r\n          try {\r\n              const decoded = jwtDecode(token);\r\n\r\n              console.log('Decoded token:', decoded);  // Log the decoded token\r\n\r\n              if (decoded && decoded.username) {\r\n                  const loggedInUsername = decoded.username;\r\n                  console.log('Logged in username:', loggedInUsername);\r\n\r\n                  // Store the token and username in localStorage or state\r\n                  localStorage.setItem('token', token);\r\n                  localStorage.setItem('username', loggedInUsername);\r\n              } else {\r\n                  console.error('Username not found in the decoded token');\r\n              }\r\n          } catch (error) {\r\n              console.error('Error decoding token:', error);\r\n          }\r\n      } else {\r\n          alert(data.message);\r\n      }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Username input */}\r\n        <div>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}  // Update username state\r\n          />\r\n        </div>\r\n\r\n        {/* Password input */}\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}  // Update password state\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\nconst GetUserButton = () => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/users'); // Fetch from your endpoint\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      setUserData(await response.json());\r\n\r\n      \r\n      console.log('Fetched User Data:', userData); // Print to the browser console\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n          <button onClick={fetchUserData}>Get User Data</button>\r\n          {userData && (\r\n              <div>\r\n                  <h3>User Data:</h3>\r\n                  <pre>{JSON.stringify(userData, null, 2)}</pre>\r\n              </div>\r\n          )}\r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport { Login, GetUserButton };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}