{"ast":null,"code":"const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform;\nconst {\n  resolve,\n  parse\n} = require('path');\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(new TypeError('path must be a string without null bytes'), {\n      path,\n      code: 'ERR_INVALID_ARG_VALUE'\n    });\n  }\n  path = resolve(path);\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/;\n    const {\n      root\n    } = parse(path);\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL'\n      });\n    }\n  }\n  return path;\n};\nmodule.exports = pathArg;","map":{"version":3,"names":["platform","process","env","__TESTING_MKDIRP_PLATFORM__","resolve","parse","require","pathArg","path","test","Object","assign","TypeError","code","badWinChars","root","substr","length","Error","module","exports"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/node_modules/mkdirp/lib/path-arg.js"],"sourcesContent":["const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\r\nconst { resolve, parse } = require('path')\r\nconst pathArg = path => {\r\n  if (/\\0/.test(path)) {\r\n    // simulate same failure that node raises\r\n    throw Object.assign(\r\n      new TypeError('path must be a string without null bytes'),\r\n      {\r\n        path,\r\n        code: 'ERR_INVALID_ARG_VALUE',\r\n      }\r\n    )\r\n  }\r\n\r\n  path = resolve(path)\r\n  if (platform === 'win32') {\r\n    const badWinChars = /[*|\"<>?:]/\r\n    const {root} = parse(path)\r\n    if (badWinChars.test(path.substr(root.length))) {\r\n      throw Object.assign(new Error('Illegal characters in path.'), {\r\n        path,\r\n        code: 'EINVAL',\r\n      })\r\n    }\r\n  }\r\n\r\n  return path\r\n}\r\nmodule.exports = pathArg\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B,IAAIF,OAAO,CAACD,QAAQ;AAC5E,MAAM;EAAEI,OAAO;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1C,MAAMC,OAAO,GAAGC,IAAI,IAAI;EACtB,IAAI,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC,EAAE;IACnB;IACA,MAAME,MAAM,CAACC,MAAM,CACjB,IAAIC,SAAS,CAAC,0CAA0C,CAAC,EACzD;MACEJ,IAAI;MACJK,IAAI,EAAE;IACR,CACF,CAAC;EACH;EAEAL,IAAI,GAAGJ,OAAO,CAACI,IAAI,CAAC;EACpB,IAAIR,QAAQ,KAAK,OAAO,EAAE;IACxB,MAAMc,WAAW,GAAG,WAAW;IAC/B,MAAM;MAACC;IAAI,CAAC,GAAGV,KAAK,CAACG,IAAI,CAAC;IAC1B,IAAIM,WAAW,CAACL,IAAI,CAACD,IAAI,CAACQ,MAAM,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAE;MAC9C,MAAMP,MAAM,CAACC,MAAM,CAAC,IAAIO,KAAK,CAAC,6BAA6B,CAAC,EAAE;QAC5DV,IAAI;QACJK,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF;EAEA,OAAOL,IAAI;AACb,CAAC;AACDW,MAAM,CAACC,OAAO,GAAGb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}