{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piteg\\\\source\\\\repos\\\\p-iteghie\\\\GamePlan\\\\client\\\\src\\\\AddFriend.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendRequests() {\n  _s();\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [error, setError] = useState(null);\n  const [loggedInUserId, setLoggedInUserId] = useState('');\n  const [loggedInUsername, setLoggedInUsername] = useState('');\n\n  // Fetch available users when component loads\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded);\n        // Assuming the token has a username, store the username in the state\n        setLoggedInUserId(decoded._id); // or decoded.userId, depending on what you store in the token\n        setLoggedInUsername(decoded.username);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const fetchFriendRequests = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:5000/get-friend-requests`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setFriendRequests(data);\n      } catch (error) {\n        setError(\"Failed to load friend requests.\");\n      }\n    };\n    fetchFriendRequests();\n  }, [loggedInUsername]);\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:5000/get-friends`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setFriends(data);\n      } catch (error) {\n        setError(\"Failed to load friends.\");\n      }\n    };\n    fetchFriends();\n  }, [loggedInUsername]);\n  const handleAccept = async requesterId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: loggedInUsername,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error accepting friend request.\");\n    }\n  };\n  const handleDeny = async requesterId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: loggedInUsername,\n          requesterId: requesterId\n        })\n      });\n      if (response.ok) {\n        setFriendRequests(friendRequests.filter(req => req._id !== requesterId));\n      }\n    } catch (error) {\n      setError(\"Error denying friend request.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: friendRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No friend requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this) : friendRequests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [request.username, \" wants to be your friend!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAccept(request._id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeny(request._id),\n          children: \"Deny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), friends.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no friends yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this) : friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: friend.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this)\n      }, friend._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendRequests, \"DRThLMt45HHo6u79vJ10ky+AVWU=\");\n_c = FriendRequests;\nexport default FriendRequests;\nvar _c;\n$RefreshReg$(_c, \"FriendRequests\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","FriendRequests","_s","friendRequests","setFriendRequests","friends","setFriends","error","setError","loggedInUserId","setLoggedInUserId","loggedInUsername","setLoggedInUsername","token","localStorage","getItem","decoded","console","log","_id","username","fetchFriendRequests","response","fetch","method","headers","data","json","fetchFriends","handleAccept","requesterId","body","JSON","stringify","userId","ok","filter","req","handleDeny","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","request","onClick","friend","_c","$RefreshReg$"],"sources":["C:/Users/piteg/source/repos/p-iteghie/GamePlan/client/src/AddFriend.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction FriendRequests() {\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [friends, setFriends] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loggedInUserId, setLoggedInUserId] = useState('');\r\n    const [loggedInUsername, setLoggedInUsername] = useState('');\r\n\r\n    // Fetch available users when component loads\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                console.log('Decoded token:', decoded);\r\n                // Assuming the token has a username, store the username in the state\r\n                setLoggedInUserId(decoded._id);  // or decoded.userId, depending on what you store in the token\r\n                setLoggedInUsername(decoded.username);\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchFriendRequests = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await fetch(`http://localhost:5000/get-friend-requests`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                setFriendRequests(data);\r\n            } catch (error) {\r\n                setError(\"Failed to load friend requests.\");\r\n            }\r\n        };\r\n\r\n        fetchFriendRequests();\r\n    }, [loggedInUsername]);\r\n\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await fetch(`http://localhost:5000/get-friends`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                setFriends(data);\r\n            } catch (error) {\r\n                setError(\"Failed to load friends.\");\r\n            }\r\n        };\r\n\r\n        fetchFriends();\r\n    }, [loggedInUsername]);\r\n\r\n    const handleAccept = async (requesterId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(\"http://localhost:5000/accept-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: loggedInUsername,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error accepting friend request.\");\r\n        }\r\n    };\r\n\r\n    const handleDeny = async (requesterId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(\"http://localhost:5000/deny-friend-request\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: loggedInUsername,\r\n                    requesterId: requesterId,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setFriendRequests(friendRequests.filter((req) => req._id !== requesterId));\r\n            }\r\n        } catch (error) {\r\n            setError(\"Error denying friend request.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Friend Requests</h1>\r\n            {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n            <div>\r\n                \r\n            </div>\r\n            <div>\r\n                {friendRequests.length === 0 ? (\r\n                    <p>No friend requests.</p>\r\n                ) : (\r\n                    friendRequests.map((request) => (\r\n                        <div key={request._id}>\r\n                            <p>{request.username} wants to be your friend!</p>\r\n                            <button onClick={() => handleAccept(request._id)}>Accept</button>\r\n                            <button onClick={() => handleDeny(request._id)}>Deny</button>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n            <div>\r\n                <h2>Your Friends</h2>\r\n                {friends.length === 0 ? (\r\n                    <p>You have no friends yet.</p>\r\n                ) : (\r\n                    friends.map((friend) => (\r\n                        <div key={friend._id}>\r\n                            <p>{friend.username}</p>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendRequests;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,IAAI;QACA,MAAMG,OAAO,GAAGlB,SAAS,CAACe,KAAK,CAAC;QAChCI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC;QACtC;QACAN,iBAAiB,CAACM,OAAO,CAACG,GAAG,CAAC,CAAC,CAAE;QACjCP,mBAAmB,CAACI,OAAO,CAACI,QAAQ,CAAC;MACzC,CAAC,CAAC,OAAOb,KAAK,EAAE;QACZU,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACZ,MAAMwB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACtEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUZ,KAAK;UACpC;QACJ,CAAC,CAAC;QACF,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCvB,iBAAiB,CAACsB,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACZC,QAAQ,CAAC,iCAAiC,CAAC;MAC/C;IACJ,CAAC;IAEDa,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACV,gBAAgB,CAAC,CAAC;EAEtBd,SAAS,CAAC,MAAM;IACZ,MAAM+B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAC9DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUZ,KAAK;UACpC;QACJ,CAAC,CAAC;QACF,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCrB,UAAU,CAACoB,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACZC,QAAQ,CAAC,yBAAyB,CAAC;MACvC;IACJ,CAAC;IAEDoB,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACjB,gBAAgB,CAAC,CAAC;EAEtB,MAAMkB,YAAY,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAI;MACA,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUZ,KAAK;QACpC,CAAC;QACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,MAAM,EAAEvB,gBAAgB;UACxBmB,WAAW,EAAEA;QACjB,CAAC;MACL,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACa,EAAE,EAAE;QACb/B,iBAAiB,CAACD,cAAc,CAACiC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAClB,GAAG,KAAKW,WAAW,CAAC,CAAC;MAC9E;IACJ,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACZC,QAAQ,CAAC,iCAAiC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAM8B,UAAU,GAAG,MAAOR,WAAW,IAAK;IACtC,IAAI;MACA,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUZ,KAAK;QACpC,CAAC;QACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,MAAM,EAAEvB,gBAAgB;UACxBmB,WAAW,EAAEA;QACjB,CAAC;MACL,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACa,EAAE,EAAE;QACb/B,iBAAiB,CAACD,cAAc,CAACiC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAClB,GAAG,KAAKW,WAAW,CAAC,CAAC;MAC9E;IACJ,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACZC,QAAQ,CAAC,+BAA+B,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAuC,QAAA,gBACIvC,OAAA;MAAAuC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBpC,KAAK,iBAAIP,OAAA;MAAK4C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEhC;IAAK;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrD3C,OAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,eACN3C,OAAA;MAAAuC,QAAA,EACKpC,cAAc,CAAC2C,MAAM,KAAK,CAAC,gBACxB9C,OAAA;QAAAuC,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE1BxC,cAAc,CAAC4C,GAAG,CAAEC,OAAO,iBACvBhD,OAAA;QAAAuC,QAAA,gBACIvC,OAAA;UAAAuC,QAAA,GAAIS,OAAO,CAAC5B,QAAQ,EAAC,2BAAyB;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClD3C,OAAA;UAAQiD,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACmB,OAAO,CAAC7B,GAAG,CAAE;UAAAoB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjE3C,OAAA;UAAQiD,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAACU,OAAO,CAAC7B,GAAG,CAAE;UAAAoB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHvDK,OAAO,CAAC7B,GAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACR;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACN3C,OAAA;MAAAuC,QAAA,gBACIvC,OAAA;QAAAuC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBtC,OAAO,CAACyC,MAAM,KAAK,CAAC,gBACjB9C,OAAA;QAAAuC,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE/BtC,OAAO,CAAC0C,GAAG,CAAEG,MAAM,iBACflD,OAAA;QAAAuC,QAAA,eACIvC,OAAA;UAAAuC,QAAA,EAAIW,MAAM,CAAC9B;QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADlBO,MAAM,CAAC/B,GAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACR,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzC,EAAA,CAjJQD,cAAc;AAAAkD,EAAA,GAAdlD,cAAc;AAmJvB,eAAeA,cAAc;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}