{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lyss\\\\Documents\\\\CEN3031\\\\GamePlan\\\\client\\\\src\\\\registerInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction registerInput() {\n  _s();\n  // Define two pieces of state: one for username and one for password\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Handle form submission\n  const handleRegister = async e => {\n    e.preventDefault(); // Prevent page refresh\n\n    // Make a POST request with both username and password\n    const response = await fetch('http://localhost:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        newUsername,\n        newPassword\n      }) // Send both username and password\n    });\n    const data = await response.json();\n    setResponseMessage(data.message); // Assuming the server returns a message\n\n    setNewUsername(''); // Reset username\n    setNewPassword(''); // Reset password\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setNewUsername(e.target.value) // Update username state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setNewPassword(e.target.value) // Update password state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(registerInput, \"mpmYFl5bV0XiZq7a7em4jUy8EJU=\");\n;\nexport default registerInput;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","registerInput","_s","newUsername","setNewUsername","newPassword","setNewPassword","responseMessage","setResponseMessage","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","message","style","padding","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","username","onChange","target","password"],"sources":["C:/Users/Lyss/Documents/CEN3031/GamePlan/client/src/registerInput.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction registerInput()\r\n{\r\n    // Define two pieces of state: one for username and one for password\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh\r\n\r\n    // Make a POST request with both username and password\r\n    const response = await fetch('http://localhost:5000/register', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ newUsername, newPassword }),  // Send both username and password\r\n    });\r\n\r\n    const data = await response.json();\r\n    setResponseMessage(data.message);  // Assuming the server returns a message\r\n\r\n    setNewUsername(''); // Reset username\r\n    setNewPassword(''); // Reset password\r\n    \r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <form onSubmit={handleRegister}>\r\n        {/* Username input */}\r\n        <div>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setNewUsername(e.target.value)}  // Update username state\r\n          />\r\n        </div>\r\n\r\n        {/* Password input */}\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setNewPassword(e.target.value)}  // Update password state\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default registerInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}